name: Haskell CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.10.7"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Select build directory
      run: echo "CABAL_BUILDDIR=dist" >> $GITHUB_ENV

    - name: Add build script path
      run: echo "$(pwd)/.github/bin" >> $GITHUB_PATH

    - name: Install pkgconfiglite
      if: matrix.os == 'windows-latest'
      run: retry 3 choco install -y pkgconfiglite

    - uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: '3.4.0.0'

    - name: Patch GHC 8.10.7 linker
      if: matrix.os == 'windows-latest' && matrix.ghc == '8.10.7'
      run: |
         sed -i \
           's|C:/GitLabRunner/builds/2WeHDSFP/0/ghc/ghc/inplace/mingw/bin/ld.exe|C:/ProgramData/chocolatey/lib/ghc.8.10.2/tools/ghc-8.10.2/mingw/bin/ld.exe|g' \
           C:/ProgramData/chocolatey/lib/ghc.8.10.7/tools/ghc-8.10.7/lib/settings

    - name: Install build environment
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install libsystemd0 libsystemd-dev
        sudo apt-get -y remove --purge software-properties-common
        sudo apt-get -y autoremove

    - name: Cabal update
      run: retry 3 cabal update

    - name: Cabal Configure
      run: retry 3 cabal configure --enable-tests --enable-benchmarks --write-ghc-environment-files=always

    - uses: actions/cache@v2
      name: Cache cabal store
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: cache-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-${{ github.sha }}
        restore-keys: cache-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-

    - name: Install dependencies
      run: retry 3 cabal build all --only-dependencies

    - name: Build
      run: retry 3 cabal build all

    - name: Run tests
      run: TMPDIR="${{ runner.temp }}" TMP="${{ runner.temp }}" cabal test all
